; -----------------------------------------------------------------------------
; These are equivalent, thanks to quoting of @my-var
(interpres/define @identity (interpres/lambda (my-var) my-var))
(identity @hello) ; => hello (Symbol)

(interpres/define @identity-2 (interpres/lambda (@my-var) my-var))
(identity-2 hello) ; => hello (Symbol)


; -----------------------------------------------------------------------------
; Data can be turned into code
(interpres/define @list-data (interpres/list @interpres/list/reverse @@(1 2 3)))

list-data ; => (interpres/list/reverse 1 2 3)
~list-data ; => (3 2 1)


; -----------------------------------------------------------------------------
; Quoting and unquoting even eachother out
(interpres/define @say-hello (interpres/lambda (message) message))

(say-hello @"Hi!") ; => "Hi!"
~@~@~@(say-hello @"Hi!") ; => "Hi!"
